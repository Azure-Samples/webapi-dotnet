#!/usr/bin/env bash

# Generate random passswords/secrets as necessary
if [[ ! -e ./.env ]]; then
    bash scripts/init-dot-env < scripts/webapi/env-template > ./.env
fi

# Ensure local copy of the env file in the webapi project folder 
ln ./.env ./services/webapi/src/development.env

# Set environment variables from the .env file
eval "$(cat ./.env | awk -F = '$0 !~ /^\s*#/ {print "export " $0}')"

# Start SQL Server
docker-compose --env-file ./.env -f ./services/db/docker-compose-db.yml up -d

connected=0
for i in {1..10};
do
    /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $SQL_SA_PASSWORD -d master -Q 'select * from sys.databases' > /dev/null
    if [ $? -eq 0 ]
    then
        echo "SQL Server ready"
        connected=1
        break
    else
        echo "SQL Server not ready yet..."
        sleep 5
    fi
done

if [[ ! $connected ]]; then
    echo "Could not connect to SQL Server" >&2
    exit 1 
fi

/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $SQL_SA_PASSWORD -i scripts/webapi/create-structure.sql
/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P $SQL_SA_PASSWORD -d webapidb -i scripts/webapi/sample-data.sql
